### YamlMime:ManagedReference
items:
- uid: MilestoneTG.NHibernate.AspNetCore.IApplicationBuilderExtensions
  commentId: T:MilestoneTG.NHibernate.AspNetCore.IApplicationBuilderExtensions
  id: IApplicationBuilderExtensions
  parent: MilestoneTG.NHibernate.AspNetCore
  children:
  - MilestoneTG.NHibernate.AspNetCore.IApplicationBuilderExtensions.UseNHibernate(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  langs:
  - csharp
  - vb
  name: IApplicationBuilderExtensions
  nameWithType: IApplicationBuilderExtensions
  fullName: MilestoneTG.NHibernate.AspNetCore.IApplicationBuilderExtensions
  type: Class
  source:
    id: IApplicationBuilderExtensions
    path: C:\dev\nhibernate-aspnetcore\src\MilestoneTG.NHibernate.AspNetCore\IApplicationBuilderExtensions.cs
    startLine: 10
  assemblies:
  - MilestoneTG.NHibernate.AspNetCore
  namespace: MilestoneTG.NHibernate.AspNetCore
  summary: "\nIApplicationBuilder extension methods for NHiberate.\n"
  example: []
  syntax:
    content: public static class IApplicationBuilderExtensions
    content.vb: Public Module IApplicationBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: MilestoneTG.NHibernate.AspNetCore.IApplicationBuilderExtensions.UseNHibernate(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  commentId: M:MilestoneTG.NHibernate.AspNetCore.IApplicationBuilderExtensions.UseNHibernate(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  id: UseNHibernate(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  isExtensionMethod: true
  parent: MilestoneTG.NHibernate.AspNetCore.IApplicationBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseNHibernate(IApplicationBuilder)
  nameWithType: IApplicationBuilderExtensions.UseNHibernate(IApplicationBuilder)
  fullName: MilestoneTG.NHibernate.AspNetCore.IApplicationBuilderExtensions.UseNHibernate(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  type: Method
  source:
    id: UseNHibernate
    path: C:\dev\nhibernate-aspnetcore\src\MilestoneTG.NHibernate.AspNetCore\IApplicationBuilderExtensions.cs
    startLine: 54
  assemblies:
  - MilestoneTG.NHibernate.AspNetCore
  namespace: MilestoneTG.NHibernate.AspNetCore
  summary: "\nA convenience method for initializing the configuration and session factory on application startup.\n"
  example:
  - "\n<pre><code>public class Startup\n{\n    public Startup(IConfiguration configuration)\n    {\n        Configuration = configuration;\n    }\n\n    public IConfiguration Configuration { get; }\n\n    public void ConfigureServices(IServiceCollection services)\n    {\n        services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\n\n        services.AddNHibernate();\n    }\n\n    public void Configure(IApplicationBuilder app, IHostingEnvironment env)\n    {\n        app.UseNHibernate();\n\n        if (env.IsDevelopment())\n        {\n            app.UseDeveloperExceptionPage();\n        }\n        else\n        {\n            app.UseHsts();\n        }\n\n        app.UseHttpsRedirection();\n        app.UseMvc();\n    }\n}</code></pre>\n"
  syntax:
    content: public static IApplicationBuilder UseNHibernate(this IApplicationBuilder builder)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: ''
    return:
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseNHibernate(builder As IApplicationBuilder) As IApplicationBuilder
  overload: MilestoneTG.NHibernate.AspNetCore.IApplicationBuilderExtensions.UseNHibernate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: MilestoneTG.NHibernate.AspNetCore
  commentId: N:MilestoneTG.NHibernate.AspNetCore
  name: MilestoneTG.NHibernate.AspNetCore
  nameWithType: MilestoneTG.NHibernate.AspNetCore
  fullName: MilestoneTG.NHibernate.AspNetCore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MilestoneTG.NHibernate.AspNetCore.IApplicationBuilderExtensions.UseNHibernate*
  commentId: Overload:MilestoneTG.NHibernate.AspNetCore.IApplicationBuilderExtensions.UseNHibernate
  name: UseNHibernate
  nameWithType: IApplicationBuilderExtensions.UseNHibernate
  fullName: MilestoneTG.NHibernate.AspNetCore.IApplicationBuilderExtensions.UseNHibernate
- uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
  commentId: T:Microsoft.AspNetCore.Builder.IApplicationBuilder
  parent: Microsoft.AspNetCore.Builder
  isExternal: true
  name: IApplicationBuilder
  nameWithType: IApplicationBuilder
  fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: true
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
