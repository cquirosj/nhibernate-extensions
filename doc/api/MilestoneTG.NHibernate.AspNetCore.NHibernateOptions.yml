### YamlMime:ManagedReference
items:
- uid: MilestoneTG.NHibernate.AspNetCore.NHibernateOptions
  commentId: T:MilestoneTG.NHibernate.AspNetCore.NHibernateOptions
  id: NHibernateOptions
  parent: MilestoneTG.NHibernate.AspNetCore
  children:
  - MilestoneTG.NHibernate.AspNetCore.NHibernateOptions.ConnectionStringName
  - MilestoneTG.NHibernate.AspNetCore.NHibernateOptions.Properties
  - MilestoneTG.NHibernate.AspNetCore.NHibernateOptions.SECTION_NAME
  langs:
  - csharp
  - vb
  name: NHibernateOptions
  nameWithType: NHibernateOptions
  fullName: MilestoneTG.NHibernate.AspNetCore.NHibernateOptions
  type: Class
  source:
    id: NHibernateOptions
    path: C:\dev\nhibernate-aspnetcore\src\MilestoneTG.NHibernate.AspNetCore\NHibernateOptions.cs
    startLine: 22
  assemblies:
  - MilestoneTG.NHibernate.AspNetCore
  namespace: MilestoneTG.NHibernate.AspNetCore
  summary: "\nNHibernate configuration for use with Microsoft.Extensions.Configuration.\n"
  example:
  - "\nNHibernate section in appsettings.json:\n\n<pre><code> \n&quot;NHibernate&quot;: {\n  &quot;ConnectionStringName&quot;:  &quot;Default&quot;,\n    &quot;Properties&quot;: {\n      &quot;dialect&quot;: &quot;NHibernate.Dialect.MsSql2012Dialect&quot;,\n      &quot;hbm2ddl.keywords&quot;: &quot;auto-quote&quot;,\n      &quot;show_sql&quot;: &quot;true&quot;,\n      &quot;generate_statistics&quot;: &quot;true&quot;\n    }\n}</code></pre>\n"
  syntax:
    content: public class NHibernateOptions
    content.vb: Public Class NHibernateOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: MilestoneTG.NHibernate.AspNetCore.NHibernateOptions.SECTION_NAME
  commentId: F:MilestoneTG.NHibernate.AspNetCore.NHibernateOptions.SECTION_NAME
  id: SECTION_NAME
  parent: MilestoneTG.NHibernate.AspNetCore.NHibernateOptions
  langs:
  - csharp
  - vb
  name: SECTION_NAME
  nameWithType: NHibernateOptions.SECTION_NAME
  fullName: MilestoneTG.NHibernate.AspNetCore.NHibernateOptions.SECTION_NAME
  type: Field
  source:
    id: SECTION_NAME
    path: C:\dev\nhibernate-aspnetcore\src\MilestoneTG.NHibernate.AspNetCore\NHibernateOptions.cs
    startLine: 27
  assemblies:
  - MilestoneTG.NHibernate.AspNetCore
  namespace: MilestoneTG.NHibernate.AspNetCore
  summary: "\nConfiguration Section name\n"
  example: []
  syntax:
    content: public const string SECTION_NAME = "NHibernate"
    return:
      type: System.String
    content.vb: Public Const SECTION_NAME As String = "NHibernate"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: MilestoneTG.NHibernate.AspNetCore.NHibernateOptions.ConnectionStringName
  commentId: P:MilestoneTG.NHibernate.AspNetCore.NHibernateOptions.ConnectionStringName
  id: ConnectionStringName
  parent: MilestoneTG.NHibernate.AspNetCore.NHibernateOptions
  langs:
  - csharp
  - vb
  name: ConnectionStringName
  nameWithType: NHibernateOptions.ConnectionStringName
  fullName: MilestoneTG.NHibernate.AspNetCore.NHibernateOptions.ConnectionStringName
  type: Property
  source:
    id: ConnectionStringName
    path: C:\dev\nhibernate-aspnetcore\src\MilestoneTG.NHibernate.AspNetCore\NHibernateOptions.cs
    startLine: 32
  assemblies:
  - MilestoneTG.NHibernate.AspNetCore
  namespace: MilestoneTG.NHibernate.AspNetCore
  summary: "\nThe name/key of the connection string to use from the ConnectionStrings section of appsettings.json.\n"
  example: []
  syntax:
    content: public string ConnectionStringName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ConnectionStringName As String
  overload: MilestoneTG.NHibernate.AspNetCore.NHibernateOptions.ConnectionStringName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: MilestoneTG.NHibernate.AspNetCore.NHibernateOptions.Properties
  commentId: P:MilestoneTG.NHibernate.AspNetCore.NHibernateOptions.Properties
  id: Properties
  parent: MilestoneTG.NHibernate.AspNetCore.NHibernateOptions
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: NHibernateOptions.Properties
  fullName: MilestoneTG.NHibernate.AspNetCore.NHibernateOptions.Properties
  type: Property
  source:
    id: Properties
    path: C:\dev\nhibernate-aspnetcore\src\MilestoneTG.NHibernate.AspNetCore\NHibernateOptions.cs
    startLine: 37
  assemblies:
  - MilestoneTG.NHibernate.AspNetCore
  namespace: MilestoneTG.NHibernate.AspNetCore
  summary: "\nDictionary of NHibernate configuration properties.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Properties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: Public Property Properties As IDictionary(Of String, String)
  overload: MilestoneTG.NHibernate.AspNetCore.NHibernateOptions.Properties*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: MilestoneTG.NHibernate.AspNetCore
  commentId: N:MilestoneTG.NHibernate.AspNetCore
  name: MilestoneTG.NHibernate.AspNetCore
  nameWithType: MilestoneTG.NHibernate.AspNetCore
  fullName: MilestoneTG.NHibernate.AspNetCore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: MilestoneTG.NHibernate.AspNetCore.NHibernateOptions.ConnectionStringName*
  commentId: Overload:MilestoneTG.NHibernate.AspNetCore.NHibernateOptions.ConnectionStringName
  name: ConnectionStringName
  nameWithType: NHibernateOptions.ConnectionStringName
  fullName: MilestoneTG.NHibernate.AspNetCore.NHibernateOptions.ConnectionStringName
- uid: MilestoneTG.NHibernate.AspNetCore.NHibernateOptions.Properties*
  commentId: Overload:MilestoneTG.NHibernate.AspNetCore.NHibernateOptions.Properties
  name: Properties
  nameWithType: NHibernateOptions.Properties
  fullName: MilestoneTG.NHibernate.AspNetCore.NHibernateOptions.Properties
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
